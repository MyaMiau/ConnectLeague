datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model evaluations {
  id           Int       @id @default(autoincrement())
  evaluator_id Int
  evaluated_id Int
  rating       Int
  comment      String?
  created_at   DateTime? @default(now()) @db.Timestamp(6)
  evaluated    users     @relation("evaluations_evaluated_id", fields: [evaluated_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  evaluator    users     @relation("evaluations_evaluator_id", fields: [evaluator_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model applications {
  id         Int       @id @default(autoincrement())
  user_id    Int
  vacancy_id Int
  status     String?   @default("pending") @db.VarChar(50)
  created_at DateTime? @default(now()) @db.Timestamp(6)
  user       users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  vacancy    vacancies @relation(fields: [vacancy_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model users {
  id             Int           @id @default(autoincrement())
  name           String        @db.VarChar(100)
  email          String        @unique @db.VarChar(100)
  password       String
  role           String        @db.VarChar(50)
  birthDate      DateTime
  created_at     DateTime?     @default(now()) @db.Timestamp(6)
  evaluations_received evaluations[] @relation("evaluations_evaluated_id")
  evaluations_given    evaluations[] @relation("evaluations_evaluator_id")
  applications   applications[]
  vacancies      vacancies[]
}

model vacancies {
  id             Int           @id @default(autoincrement())
  title          String        @db.VarChar(100)
  description    String
  organization_id Int
  created_at     DateTime?     @default(now()) @db.Timestamp(6)
  applications   applications[]
  organization   users         @relation(fields: [organization_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}